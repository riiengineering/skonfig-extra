#!/bin/sh -e
#
# 2020 Matthias Stecher (matthiasstecher at gmx.de)
#
# This file is part of skonfig-extra.
#
# skonfig-extra is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-extra is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-extra. If not, see <http://www.gnu.org/licenses/>.
#

# Check states
state=""
unit_state=""
param_state=$(cat "${__object:?}/parameter/state")

case ${param_state}
in
    enabled|disabled)
        state="present"
        unit_state=${param_state}
        ;;

    absent)
        state="absent"
        unit_state="disabled"
        ;;

    *)
        # does not exist
        printf "The state '%s' does not exist, can't continue!\n" "${param_state}" >&2
        exit 2
        ;;
esac


mkdir "${__object:?}/files"

if [ "${state}" = "present" ]; then
    # process template
    "${__type:?}/files/gunicorn.py.sh" > "${__object:?}/files/gunicorn.py"

    # gunicorn config file
    __file /opt/netbox/gunicorn.py \
        --mode 644 --owner netbox \
        --source "${__object:?}/files/gunicorn.py"

else
    # absent config file
    __file /opt/netbox/gunicorn.py --state absent
fi


TYPE="Gunicorn"
export TYPE

"${__type:?}/files/netbox.socket.sh" "${__object:?}/parameter/bind-to" \
    > "${__object:?}/files/netbox.socket"

# install systemd files
__systemd_unit gunicorn-netbox.socket \
    --state "${state}" --enablement-state "${unit_state}" \
    --source "${__object:?}/files/netbox.socket" --restart
__systemd_unit gunicorn-netbox.service \
    --state "${state}" --enablement-state "${unit_state}" \
    --source "${__type:?}/files/netbox.service" --restart
